#!/bin/bash
. function.sh

CODE [U-02] 패스워드 복잡성 설정
cat << EOF >> $RESULT
EOF

FILENAME=/etc/security/pwquality.conf
MINLEN=$(cat $FILENAME | grep "minlen" | awk '{print $3}')

if [$MINLEN -ge 8]; then
   INFO "패스워드 최소길이가 8자리 이상입니다."
   CHECK=$(cat $FILENAME | grep 'credit =' | awk '{print $3}' | grep 0 | wc -l)
   if [ $CHECK -ge 2 ] ; then
      VULN "패스워드 최소길이 8자리 이상, 영문·숫자·특수문자 최소 입력 기능이 설정 되지않은 경우"
   else
      OK "패스워드 최소길이 8자리 이상, 영문·숫자·특수문자 최소 입력 기능이 설정된 경우"
   fi
else
   VULN "패스워드 최소 길이가 8자리 이하입니다."
fi

cat $RESULT

# result.log 파일의 내용을 읽고, 줄바꿈을 삭제하여 log_content 변수에 저장
log_content=$(cat result.log | tr -d '\n' | sed 's/"/\\"/g')
# 따옴표 이스케이프 처리

# printf를 사용하여 JSON 구조를 생성하고 result_U_01.json 파일에 저장
printf "{
    \"분류와 점검항목\": \"1. 계정관리 > 1.2 패스워드 복잡성 설정\",
    \"중요도\": \"상\",
    \"점검 내용\": \"시스템 정책에 사용자 계정(root 및 일반계정 모두 해당) 패스워드 복잡성 관련 설정이 되어 있는지 점검\",
    \"점검 목적\": \"패스워드 복잡성 관련 정책이 설정되어 있는지 점검하여 비인가자의 공격(무작위 대입 공격, 사전 대입 공격 등)에 대비가 되어 있는지 확인하기 위함\",
    \"보안 위협\": \"복잡성 설정이 되어있지 않은 패스워드는 사회공학적인 유추가 가능 할 수 있으며 암호화된 패스워드 해시값을 무작위 대입공격, 사전대입 공격 등으로 단시간에 패스워드 크렉이 가능함\",
    \"판단 기준\": \"양호 : 패스워드 최소길이 8자리 이상, 영문·숫자·특수문자 최소 입력 기능이설정된 경우 취약 : 패스워드 최소길이 8자리 이상, 영문·숫자·특수문자 최소 입력 기능이 설정된 경우\",
    \"조치 방법\": \"계정과 유사하지 않은 8자 이상의 영문, 숫자, 특수문자의 조합으로 암호 설정 및 패스워드 복잡성 옵션 설정\",
    \"검사 내용\": \"%s\"
}" "$log_content" > result_U_02.json
